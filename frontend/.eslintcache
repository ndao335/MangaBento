[{"/Users/nathaniel/Desktop/MangaBento/frontend/src/index.js":"1","/Users/nathaniel/Desktop/MangaBento/frontend/src/App.js":"2","/Users/nathaniel/Desktop/MangaBento/frontend/src/reportWebVitals.js":"3","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Home.js":"4","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Login.js":"5","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Manga.js":"6","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/ReadManga.js":"7","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Bookmark.js":"8","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/store.js":"9","/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Header.js":"10","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Register.js":"11","/Users/nathaniel/Desktop/MangaBento/frontend/src/components/MangaCard.js":"12","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/userAction.js":"13","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/rootReducer.js":"14","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/mangaInfoAction.js":"15","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/mangaInfoReducer.js":"16","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/userReducer.js":"17","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Admin.js":"18","/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Footer.js":"19"},{"size":543,"mtime":1623983305801,"results":"20","hashOfConfig":"21"},{"size":1441,"mtime":1624313957757,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1623633155017,"results":"23","hashOfConfig":"21"},{"size":4805,"mtime":1624318619916,"results":"24","hashOfConfig":"21"},{"size":4621,"mtime":1624139656177,"results":"25","hashOfConfig":"21"},{"size":5707,"mtime":1624152352464,"results":"26","hashOfConfig":"21"},{"size":3458,"mtime":1624316534897,"results":"27","hashOfConfig":"21"},{"size":1349,"mtime":1624150790759,"results":"28","hashOfConfig":"21"},{"size":145,"mtime":1623633155017,"results":"29","hashOfConfig":"21"},{"size":2189,"mtime":1624178156756,"results":"30","hashOfConfig":"21"},{"size":2281,"mtime":1623982700575,"results":"31","hashOfConfig":"21"},{"size":1225,"mtime":1624148055278,"results":"32","hashOfConfig":"21"},{"size":597,"mtime":1623633155016,"results":"33","hashOfConfig":"21"},{"size":222,"mtime":1623633155017,"results":"34","hashOfConfig":"21"},{"size":158,"mtime":1623633155014,"results":"35","hashOfConfig":"21"},{"size":480,"mtime":1623633155016,"results":"36","hashOfConfig":"21"},{"size":1183,"mtime":1623633155017,"results":"37","hashOfConfig":"21"},{"size":3215,"mtime":1624134263494,"results":"38","hashOfConfig":"21"},{"size":625,"mtime":1624314107510,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"16r6cms",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/Users/nathaniel/Desktop/MangaBento/frontend/src/index.js",[],["87","88"],"/Users/nathaniel/Desktop/MangaBento/frontend/src/App.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/reportWebVitals.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Home.js",["89","90","91","92","93"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport MangaCard from '../components/MangaCard'\n\nimport './Home.css'\n\nconst Home = props => {\n\n    const [searchTerm, setSearchTerm] = React.useState('')\n    const [mangaList, setMangaList] = React.useState([])\n    const [fullMangaList, setFullMangaList] = React.useState([]);\n    let i = 1;\n\n    React.useEffect(() => {\n        axios.get('http://localhost:5000/api/manga')\n            .then(res => {\n                setMangaList([...res.data])\n                setFullMangaList([...res.data])\n            })\n    }, [])\n\n    const onSearchInputChange = e => {\n        setMangaList(fullMangaList);\n        setSearchTerm(e.target.value);\n    };\n\n    React.useEffect(() => {\n        const results = mangaList.filter(manga => (manga.name).toLowerCase().includes(searchTerm.toLowerCase()));\n        setMangaList(results);\n    }, [searchTerm]);\n\n    const handleView = e => {\n        let results = mangaList;\n        let temporary = fullMangaList;\n        switch(e){\n            case \"views\":\n                results = mangaList.sort(\n                    function (a, b)\n                    {\n                        if(a.views < b.views) return 1;\n                        else return -1;\n                    }\n                )\n                setMangaList(results);\n                break;\n            case \"rating\":\n                results = mangaList.sort(\n                    function (a,b)\n                    {\n                        if(a.rating < b.rating) return 1;\n                        else return -1;\n                    });\n                \n                setMangaList(results);\n                break;\n            case \"letter\":\n                results = mangaList.sort(\n                    function (a,b)\n                    { \n                        if(a.name < b.name) return 1;\n                        else return -1;\n                    });\n                setMangaList(results);\n                break;\n            case \"comedy\":\n                temporary = fullMangaList;\n                results = temporary.filter(manga => (manga.genres).includes('Comedy'));\n                setMangaList(results);\n                break;\n            case \"fantasy\":\n                temporary = fullMangaList;\n                results = temporary.filter(manga => (manga.genres).includes('Fantasy'));\n                setMangaList(results);\n                break;\n            default:\n                setMangaList(fullMangaList);\n                break;\n        }\n    }\n\n    return (\n        <div className='homePage container-fluid'>\n            <div className='row' style={{ textAlign: 'center' }}>\n                <div className='col-lg-12'>\n                    <form onSubmit={(e) => {\n                        e.preventDefault();\n                    }}>\n                        <input type=\"text\" value={searchTerm} onChange={onSearchInputChange} placeholder='Search Mangas' className='searchManga' />\n                    </form>\n                </div>\n            </div>\n\n            <div className='mainContainer'>\n                <div className='viewContainer d-flex flex-column text-center'>\n                    <h4>Manga by genres:</h4>\n                    <ul className='d-flex flex-column text-center'>\n                        <Link onClick={() => {handleView(\"default\")}}>Default</Link>\n                        <Link onClick={() => {handleView(\"views\")}}>Highest View</Link>\n                        <Link onClick={() => {handleView(\"rating\")}}>Rating View</Link>\n                        <Link onClick={() => {handleView(\"comedy\")}}>Comedy</Link>\n                        <Link onClick={() => {handleView(\"fantasy\")}}>Fantasy</Link>\n                    </ul>\n                </div>\n                <div>\n                    <div className=\"midContent\">\n                        <div className='title text-center'>\n                            <h2>Read Manga Online</h2>\n                        </div>\n\n                        <div className='justify-content-between'>\n                            <div className='mangaContainer'>\n                                {\n                                    mangaList.map((item, index) => {\n                                        return(<MangaCard key={index} manga={{ name: item.name, id: item.id, image: item.image }}/>)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sideview-container\">\n                    <img className=\"clipimage\" src=\"./sideview.jpeg\" alt=\"sideview image\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Login.js",["94"],"import React, { useState } from 'react'\nimport axios from 'axios'\n\nimport { connect } from 'react-redux'\nimport { login } from '../redux/actions/userAction'\n\nimport { Link } from 'react-router-dom'\n\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\n\n\n\nimport './Login.css'\n\nconst Login = (props) => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const [login, setLogin] = useState(false); //set up login\n    const [data, setData] = useState({}); //set up fb data\n\n    const responseFacebook = (response) => {\n        console.log(response);\n        setData(response);\n        if(response.accessToken){\n          setLogin(true);\n        } else{\n          setLogin(false);\n        }\n    }\n\n    const responseGoogle = (response) => {\n        console.log(response);\n        setData(response);\n        if(response.accessToken){\n          setLogin(true);\n        } else{\n          setLogin(false);\n        }\n    }\n\n    const usernameChanged = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const passwordChanged = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        axios.post(\n            'http://localhost:5000/api/user/signin',\n            {\n                username,\n                password\n            }\n        ).then(res => {\n            if (res.data.accessToken) {\n                const { username, accessToken, bookmarks } = res.data\n                props.login(username, accessToken, bookmarks)\n                setUsername('')\n                setPassword('')\n                props.history.push('/')\n                //setLogin(true);\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            //setLogin(false);\n            alert('Incorrect username or password')\n        })\n    }\n\n    return (\n        <div class=\"container\" style={{ backgroundImage: `url(\"./sideview.jpeg\")`}}>\n            <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n            <meta name=\"google-signin-client_id\" content=\"1050954081973-n1u9uvkipun891krjs8ehj5kpbharvt1.apps.googleusercontent.com\"></meta>\n            {!login && \n                <React.Fragment>\n                    <div className='loginPage'>\n                        <div className='loginForm'>\n                            <img className=\"logo\" src=\"./logo.png\" alt=\"MangaBento\"/>\n                            <h4>Log In</h4>\n                            <p>Haven't register? <Link className=\"nav-link\" to=\"/register\">Register</Link></p>\n                            <form onSubmit={handleSubmit}>\n                                <div className='form-group'>\n                                    <input required type=\"text\" value={username} onChange={usernameChanged} className='form-control' placeholder='Username' />\n                                </div>\n                                <div className='form-group'>\n                                    <input required type=\"password\" value={password} onChange={passwordChanged} className='form-control' placeholder='Password' />\n                                </div>\n                                <div className='form-group'>\n                                    <button className='btn btn-primary btn-block'>Submit</button>\n                                </div>\n                            </form>\n                            <FacebookLogin\n                            appId=\"502330741034696\"\n                            autoLoad={false}\n                            fields=\"name,email,picture\"\n                            scope=\"public_profile,user_friends\"\n                            callback={responseFacebook} \n                            icon=\"fa-facebook\"\n                            />\n                            <GoogleLogin\n                            className=\"GoogleButton\"\n                            clientId={\"1050954081973-n1u9uvkipun891krjs8ehj5kpbharvt1.apps.googleusercontent.com\"}\n                            cookiePolicy={'single_host_origin'}\n                            callback={responseGoogle} \n                            icon=\"fa-google\"\n                            />\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (username, accessToken, bookmarks) => {\n            dispatch(login(username, accessToken, bookmarks))\n        }\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Login)","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Manga.js",["95"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport { connect } from 'react-redux'\nimport { addBookmark, removeBookmark } from '../redux/actions/userAction'\n\nfunction MangaPage(props) {\n\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n        if (props.manga.name === '') {\n            props.history.push('/')\n        }\n    }, [])\n\n    const handleFavorite = () => {\n        if (!props.user.username || !props.manga._id) {\n            console.log((\"Invalid request\"))\n            return\n        }\n        axios.post(\n            'http://localhost:5000/api/user/bookmarks',\n            {\n                username: props.user.username,\n                mangaId: props.manga._id\n            }\n        ).then(res => {\n            if (props.user.bookmarks.indexOf(props.manga._id) !== -1) {\n                props.removeBookmark(props.manga._id)\n            } else {\n                props.addBookmark(props.manga._id)\n            }\n        })\n    }\n\n    const addRemoveBookmark = () => {\n        if (props.user.bookmarks.indexOf(props.manga._id) !== -1) {\n            return <button onClick={handleFavorite} className='btn btn-block btn-danger' style={{ marginTop: '5px', maxWidth: '300px' }}>Remove Favorite</button>\n        } else {\n            return <button onClick={handleFavorite} className='btn btn-block btn-primary' style={{ marginTop: '5px', maxWidth: '300px' }}>Add Favorite</button>\n        }\n    }\n\n    const mangaName = (name) => {\n        const newName = []\n        name.split(' ').forEach(item => {\n            newName.push(item.charAt(0).toUpperCase() + item.slice(1))\n        })\n        return (newName.join(' '))\n    }\n\n    return (\n        <div className='container'>\n            <div className=\"row\" style={{ marginTop: '30px', padding: '20px', backgroundColor: '#fff', borderRadius: '5px' }}>\n                <div className='col-lg-3 d-flex flex-column align-items-center'>\n                    <img src={`../${props.manga.thumbnail}`} alt='algo' className='img-fluid' style={{ width: '300px', height: '375px' }} />\n                    {\n                        props.user.isLogged ? addRemoveBookmark() : <button disabled className='btn btn-block btn-primary' style={{ marginTop: '5px', maxWidth: '300px' }}>Add Favorite</button>\n                    }\n                </div>\n\n                <div className='col-lg-8 d-flex flex-column align-items-start justify-content-start' style={{ marginTop: '10px', wordWrap: 'break-word', textAlign: 'start' }}>\n                    <p>\n                        Name: {mangaName(props.manga.name)}\n                    </p>\n                    <p>\n                        Alternative: {props.manga.alternative}\n                    </p>\n                    <p>\n                        Author: {mangaName(props.manga.author)}\n                    </p>\n                    <p>\n                        Genres: {props.manga.genres.map((item) => <span>{item} | </span>)}\n                    </p>\n                    <p>\n                        Rating: {props.manga.rating}/5\n                    </p>\n                    <p>\n                        Description: {props.manga.description}\n                    </p>\n                    <p>\n                        Views: {props.manga.views}\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"row\" style={{ backgroundColor: '#fff', paddingTop: '15px' }}>\n                <div className=\"col-lg-12\">\n                    <h3 style={{ textAlign: 'start' }}>Chapters</h3>\n                </div>\n                <ul className=\"col-lg-12\" style={{ listStyle: 'none', maxHeight: '225px', padding: '0px 15px', overflowY: 'auto' }}>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        {/* <Link style={{ color: '#000' }} onClick={increaseViews} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 1}}}> Chapter 1</Link> */}\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {displayName: mangaName(props.manga.name), name: props.manga.name, chapter: 1}}}> Chapter 1</Link>\n                    </li>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        {/* <Link style={{ color: '#000' }} onClick={increaseViews} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 2}}}> Chapter 2</Link> */}\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {displayName: mangaName(props.manga.name), name: props.manga.name, chapter: 2}}}> Chapter 2</Link>\n                    </li>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        {/* <Link style={{ color: '#000' }} onClick={increaseViews} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 3}}}> Chapter 3</Link> */}\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {displayName: mangaName(props.manga.name), name: props.manga.name, chapter: 3}}}> Chapter 3</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        manga: state.mangaInfo,\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addBookmark: manga => {\n            dispatch(addBookmark(manga))\n        },\n        removeBookmark: manga => {\n            dispatch(removeBookmark(manga))\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MangaPage)\n","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/ReadManga.js",["96","97"],"import React, { useEffect, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios'\n\nfunction ReadManga(props) {\n    \n    const [images, setImages] = useState([])\n    var mangaName = props.location.state.name.split(' ').join('-');\n    var chapter = props.location.state.chapter;\n\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n    }, [])\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/manga/${mangaName}/${chapter}`)\n            .then(res => {\n                const myImages = [...res.data]\n                setImages(myImages)\n            })\n\n        axios.post('http://localhost:5000/api/manga/updateView',\n                {\n                    name: props.location.state.name,\n                }\n            ).catch(err => alert(err))\n        if(props.location.state.chapter === 1){\n            document.getElementById('previousButton').style.display = 'none';\n        }\n        else if (props.location.state.chapter === 3){\n            document.getElementById('nextButton').style.display = 'none';\n        }\n    }, [])\n\n    return (\n        <div className='container-fluid d-flex flex-column justify-content-center align-items-center' style={{ minHeight: 'calc(100vh - 56px)', backgroundColor: '#000' }}>\n            <div className='d-flex flex-row justify-content-between' style={{ marginTop: '10px', width: '100%' }}>\n                <div style={{ color: 'red' }}>\n                    <Link style={{ color: '#fff' }} to='/'>Home</Link> / <Link style={{ color: '#fff' }} to='/manga'>{props.location.state.displayName} </Link> / Chapter {chapter}\n                </div>\n            </div>\n            <ul className='d-flex flex-column justify-content-center align-items-center' style={{ padding: '10px 0px' }}>\n                {\n                    images.map((item, key) => <li key={key}><img src={`data:image/jpeg; base64, ${item}`} className='img-fluid' alt=\"\" /></li>)\n                }\n            </ul>\n\n            <div className='col-lg-12' style={{ margin: '10px' }}>\n                <div className='d-flex flex-row justify-content-center align-items-center'>\n                    <Link to={{ \n                        pathname: '/readmanga', \n                        state: {\n                            displayName: props.location.state.displayName, \n                            name: props.location.state.name, \n                            chapter: (props.location.state.chapter - 1)}}} \n                        onClick={() => window.location.reload()}>\n                        <Button id='previousButton' className='btn btn-success' style={{ marginRight: '5px' }}>Previous chapter</Button>\n                    </Link>\n                    <Link to={{ \n                        pathname: '/readmanga', \n                        state: {\n                            displayName: props.location.state.displayName, \n                            name: props.location.state.name, \n                            chapter: (props.location.state.chapter + 1)}}} \n                        onClick={() => window.location.reload()}>\n                        <Button id='nextButton' className='btn btn-success' style={{ marginLeft: '5px' }}>Next chapter</Button>\n                    </Link>\n                </div>\n            </div>            \n        </div>\n    )\n}\n\nexport default ReadManga\n","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Bookmark.js",["98"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport MangaCard from '../components/MangaCard'\nimport { connect } from 'react-redux'\n\nfunction Bookmark(props) {\n\n    const [bookmarks, setBookmarks] = useState([])\n\n    useEffect(() => {\n        axios.get(\n            `http://localhost:5000/api/user/bookmarks/${props.user.username}`\n        ).then(res => {\n            setBookmarks([...res.data])\n        })\n    }, [])\n\n    console.log(bookmarks)\n\n    return (\n        <div className='container-fluid'>\n            <div className=\"row\" style={{ marginTop: '30px', textAlign: 'center' }}>\n                <div className=\"col-lg-12\">\n                    <h1>Favorites</h1>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"col-lg-10 d-flex flex-wrap justify-content-center\">\n                    {\n                        bookmarks.map((item, index) => {\n                            return <MangaCard key={index} manga={{ name: item.name, id: item.id, image: item.image }} />\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Bookmark)","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/store.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Header.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Register.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/components/MangaCard.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/userAction.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/rootReducer.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/mangaInfoAction.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/mangaInfoReducer.js",[],["99","100"],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/userReducer.js",["101"],"import { addBookmark } from \"../actions/userAction\"\n\nconst initialState = {\n    isLogged: false,\n    username: '',\n    bookmarks: []\n}\n\nconst userReducer = (state = initialState, action) => {\n    const { type, payload } = action\n    switch (type) {\n        case 'LOGIN':\n            localStorage.setItem('user', JSON.stringify(payload.accessToken))\n            return {\n                ...state,\n                isLogged: true,\n                username: payload.username,\n                bookmarks: payload.bookmarks\n            }\n        case 'LOGOUT':\n            localStorage.removeItem('user')\n            return {\n                isLogged: false,\n                username: ''\n            }\n        case 'ADD_BOOKMARK':\n            let add = state.bookmarks\n            add.push(payload)\n            return {\n                ...state,\n                bookmarks: add\n            }\n        case 'REMOVE_BOOKMARK':\n            let remove = state.bookmarks\n            remove.splice(remove.indexOf(payload), 1)\n            return {\n                ...state,\n                bookmarks: remove\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Admin.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Footer.js",["102"],"import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './Footer.css'\n\nconst Footer = (props) => {\n    return (\n        <footer>\n            <Link className=\"navbar-brand\" to=\"/\">\n                <img className=\"logo\" src=\"./logo.png\" alt=\"MangaBento\"/>\n            </Link>\n            <div>\n                <h4>Copyright &#169; by Nathaniel Dao</h4>\n                <p>Contact me: <a href=\"mailto:nathanielxd94@gmail.com\">nathanielxd94@gmail.com</a></p>\n            </div>\n        </footer>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default Footer;",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"112","line":13,"column":9,"nodeType":"109","messageId":"110","endLine":13,"endColumn":10},{"ruleId":"113","severity":1,"message":"114","line":31,"column":8,"nodeType":"115","endLine":31,"endColumn":20,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":123,"column":21,"nodeType":"119","endLine":123,"endColumn":92},{"ruleId":"107","severity":1,"message":"120","line":22,"column":12,"nodeType":"109","messageId":"110","endLine":22,"endColumn":16},{"ruleId":"113","severity":1,"message":"121","line":19,"column":8,"nodeType":"115","endLine":19,"endColumn":10,"suggestions":"122"},{"ruleId":"107","severity":1,"message":"123","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"124","line":37,"column":8,"nodeType":"115","endLine":37,"endColumn":10,"suggestions":"125"},{"ruleId":"113","severity":1,"message":"126","line":16,"column":8,"nodeType":"115","endLine":16,"endColumn":10,"suggestions":"127"},{"ruleId":"103","replacedBy":"128"},{"ruleId":"105","replacedBy":"129"},{"ruleId":"107","severity":1,"message":"130","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":21},{"ruleId":"107","severity":1,"message":"131","line":21,"column":7,"nodeType":"109","messageId":"110","endLine":21,"endColumn":22},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'i' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'mangaList'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.manga.name'. Either include them or remove the dependency array.",["135"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'chapter', 'mangaName', 'props.location.state.chapter', and 'props.location.state.name'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'props.user.username'. Either include it or remove the dependency array.",["137"],["132"],["133"],"'addBookmark' is defined but never used.","'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [mangaList, searchTerm]",{"range":"146","text":"147"},"Update the dependencies array to be: [props.history, props.manga.name]",{"range":"148","text":"149"},"Update the dependencies array to be: [chapter, mangaName, props.location.state.chapter, props.location.state.name]",{"range":"150","text":"151"},"Update the dependencies array to be: [props.user.username]",{"range":"152","text":"153"},[940,952],"[mangaList, searchTerm]",[454,456],"[props.history, props.manga.name]",[1190,1192],"[chapter, mangaName, props.location.state.chapter, props.location.state.name]",[445,447],"[props.user.username]"]