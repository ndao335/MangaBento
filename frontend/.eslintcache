[{"/Users/nathaniel/Desktop/MangaBento/frontend/src/index.js":"1","/Users/nathaniel/Desktop/MangaBento/frontend/src/App.js":"2","/Users/nathaniel/Desktop/MangaBento/frontend/src/reportWebVitals.js":"3","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Home.js":"4","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Login.js":"5","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Manga.js":"6","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/ReadManga.js":"7","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Bookmark.js":"8","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/store.js":"9","/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Header.js":"10","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Register.js":"11","/Users/nathaniel/Desktop/MangaBento/frontend/src/components/MangaCard.js":"12","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/userAction.js":"13","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/rootReducer.js":"14","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/mangaInfoAction.js":"15","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/mangaInfoReducer.js":"16","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/userReducer.js":"17"},{"size":544,"mtime":1623633155011,"results":"18","hashOfConfig":"19"},{"size":1265,"mtime":1623633155008,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1623633155017,"results":"21","hashOfConfig":"19"},{"size":3663,"mtime":1623906899026,"results":"22","hashOfConfig":"19"},{"size":2479,"mtime":1623855508706,"results":"23","hashOfConfig":"19"},{"size":5033,"mtime":1623857478751,"results":"24","hashOfConfig":"19"},{"size":2421,"mtime":1623856094522,"results":"25","hashOfConfig":"19"},{"size":1300,"mtime":1623806517533,"results":"26","hashOfConfig":"19"},{"size":145,"mtime":1623633155017,"results":"27","hashOfConfig":"19"},{"size":2189,"mtime":1623808348465,"results":"28","hashOfConfig":"19"},{"size":2281,"mtime":1623855889956,"results":"29","hashOfConfig":"19"},{"size":1210,"mtime":1623633155010,"results":"30","hashOfConfig":"19"},{"size":597,"mtime":1623633155016,"results":"31","hashOfConfig":"19"},{"size":222,"mtime":1623633155017,"results":"32","hashOfConfig":"19"},{"size":158,"mtime":1623633155014,"results":"33","hashOfConfig":"19"},{"size":480,"mtime":1623633155016,"results":"34","hashOfConfig":"19"},{"size":1183,"mtime":1623633155017,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"16r6cms",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/Users/nathaniel/Desktop/MangaBento/frontend/src/index.js",[],["75","76"],"/Users/nathaniel/Desktop/MangaBento/frontend/src/App.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/reportWebVitals.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Home.js",["77","78","79","80","81","82"],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Login.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Manga.js",["83"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport { connect } from 'react-redux'\nimport { addBookmark, removeBookmark } from '../redux/actions/userAction'\n\nfunction MangaPage(props) {\n\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n        if (props.manga.name === '') {\n            props.history.push('/')\n        }\n    }, [])\n\n    const handleFavorite = () => {\n        if (!props.user.username || !props.manga._id) {\n            console.log((\"Invalid request\"))\n            return\n        }\n        axios.post(\n            'http://localhost:5000/api/user/bookmarks',\n            {\n                username: props.user.username,\n                mangaId: props.manga._id\n            }\n        ).then(res => {\n            if (props.user.bookmarks.indexOf(props.manga._id) !== -1) {\n                props.removeBookmark(props.manga._id)\n            } else {\n                props.addBookmark(props.manga._id)\n            }\n        })\n    }\n\n    const addRemoveBookmark = () => {\n        if (props.user.bookmarks.indexOf(props.manga._id) !== -1) {\n            return <button onClick={handleFavorite} className='btn btn-block btn-danger' style={{ marginTop: '5px', maxWidth: '300px' }}>Remove Favorite</button>\n        } else {\n            return <button onClick={handleFavorite} className='btn btn-block btn-primary' style={{ marginTop: '5px', maxWidth: '300px' }}>Add Favorite</button>\n        }\n    }\n\n    const mangaName = (name) => {\n        const newName = []\n        name.split(' ').forEach(item => {\n            newName.push(item.charAt(0).toUpperCase() + item.slice(1))\n        })\n        return (newName.join(' '))\n    }\n\n    return (\n        <div className='container'>\n            <div className=\"row\" style={{ marginTop: '30px', padding: '20px', backgroundColor: '#fff', borderRadius: '5px' }}>\n                <div className='col-lg-3 d-flex flex-column align-items-center'>\n                    <img src={`../${props.manga.thumbnail}`} alt='algo' className='img-fluid' style={{ width: '300px', height: '375px' }} />\n                    {\n                        props.user.isLogged ? addRemoveBookmark() : <button disabled className='btn btn-block btn-primary' style={{ marginTop: '5px', maxWidth: '300px' }}>Add Favorite</button>\n                    }\n                </div>\n\n                <div className='col-lg-8 d-flex flex-column align-items-start justify-content-start' style={{ marginTop: '10px', wordWrap: 'break-word', textAlign: 'start' }}>\n                    <p>\n                        Name: {mangaName(props.manga.name)}\n                    </p>\n                    <p>\n                        Alternative: {props.manga.alternative}\n                    </p>\n                    <p>\n                        Author: {mangaName(props.manga.author)}\n                    </p>\n                    <p>\n                        Genres: {props.manga.genres.map((item) => <span>{item} | </span>)}\n                    </p>\n                    <p>\n                        Rating: {props.manga.rating}\n                    </p>\n                    <p>\n                        Description: {props.manga.description}\n                    </p>\n                    <p>\n                        Views: {props.manga.views}\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"row\" style={{ backgroundColor: '#fff', paddingTop: '15px' }}>\n                <div className=\"col-lg-12\">\n                    <h3 style={{ textAlign: 'start' }}>Chapters</h3>\n                </div>\n                <ul className=\"col-lg-12\" style={{ listStyle: 'none', maxHeight: '225px', padding: '0px 15px', overflowY: 'auto' }}>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 1}}}> Chapter 1</Link>\n                    </li>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 2}}}> Chapter 2</Link>\n                    </li>\n                    <li className=\"col-lg-3\" style={{ display: 'inline'}}>\n                        <Link style={{ color: '#000' }} to={{ pathname: '/readmanga', state: {name: props.manga.name, chapter: 3}}}> Chapter 3</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        manga: state.mangaInfo,\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addBookmark: manga => {\n            dispatch(addBookmark(manga))\n        },\n        removeBookmark: manga => {\n            dispatch(removeBookmark(manga))\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MangaPage)\n","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/ReadManga.js",["84"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from \"react-bootstrap/Button\";\nimport axios from 'axios'\n\nfunction ReadManga(props) {\n    \n    const [images, setImages] = useState([])\n    var mangaName = props.location.state.name.split(' ').join('-');\n    var chapter = props.location.state.chapter;\n\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n    }, [])\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/manga/${mangaName}/${chapter}`)\n            .then(res => {\n                const myImages = [...res.data]\n                setImages(myImages)\n            })\n    }, [])\n\n    return (\n        <div className='container-fluid d-flex flex-column justify-content-center align-items-center' style={{ minHeight: 'calc(100vh - 56px)', backgroundColor: '#000' }}>\n            <div className='d-flex flex-row justify-content-between' style={{ marginTop: '10px', width: '100%' }}>\n                <div style={{ color: 'red' }}>\n                    <Link style={{ color: '#fff' }} to='/'>Home</Link> / <Link style={{ color: '#fff' }} to='/manga'>{mangaName} </Link> / Chapter {chapter}\n                </div>\n            </div>\n            <ul className='d-flex flex-column justify-content-center align-items-center' style={{ padding: '10px 0px' }}>\n                {\n                    images.map((item, key) => <li key={key}><img src={`data:image/jpeg; base64, ${item}`} className='img-fluid' alt=\"\" /></li>)\n                }\n            </ul>\n\n            <div className='col-lg-12' style={{ margin: '10px' }}>\n                <div className='d-flex flex-row justify-content-center align-items-center'>\n                    <Link to={{ pathname: '/readmanga', state: {name: props.location.state.name, chapter: (props.location.state.chapter - 1)}}}>\n                        <Button className='btn btn-success' style={{ marginRight: '5px' }}>Previous chapter</Button>\n                    </Link>\n                    <Link to={{ pathname: '/readmanga', state: {name: props.location.state.name, chapter: (props.location.state.chapter + 1)}}}>\n                        <Button className='btn btn-success' style={{ marginLeft: '5px' }}>Next chapter</Button>\n                    </Link>\n                </div>\n            </div>            \n        </div>\n    )\n}\n\nexport default ReadManga\n","/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Bookmark.js",["85"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport MangaCard from '../components/MangaCard'\nimport { connect } from 'react-redux'\n\nfunction Bookmark(props) {\n\n    const [bookmarks, setBookmarks] = useState([])\n\n    useEffect(() => {\n        axios.get(\n            `http://localhost:5000/api/user/bookmarks/${props.user.username}`\n        ).then(res => {\n            setBookmarks([...res.data])\n        })\n    }, [])\n\n    return (\n        <div className='container-fluid'>\n            <div className=\"row\" style={{ marginTop: '30px' }}>\n                <div className=\"col-lg-12\">\n                    <h1>Favorites</h1>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"col-lg-10 d-flex flex-wrap justify-content-center\">\n                    {\n                        bookmarks.map((item, index) => {\n                            return <MangaCard key={index} manga={{ name: item.name, id: item.id, image: item.image }} />\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Bookmark)","/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/store.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/components/Header.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/pages/Register.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/components/MangaCard.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/userAction.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/rootReducer.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/actions/mangaInfoAction.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/mangaInfoReducer.js",[],"/Users/nathaniel/Desktop/MangaBento/frontend/src/redux/reducers/userReducer.js",["86"],"import { addBookmark } from \"../actions/userAction\"\n\nconst initialState = {\n    isLogged: false,\n    username: '',\n    bookmarks: []\n}\n\nconst userReducer = (state = initialState, action) => {\n    const { type, payload } = action\n    switch (type) {\n        case 'LOGIN':\n            localStorage.setItem('user', JSON.stringify(payload.accessToken))\n            return {\n                ...state,\n                isLogged: true,\n                username: payload.username,\n                bookmarks: payload.bookmarks\n            }\n        case 'LOGOUT':\n            localStorage.removeItem('user')\n            return {\n                isLogged: false,\n                username: ''\n            }\n        case 'ADD_BOOKMARK':\n            let add = state.bookmarks\n            add.push(payload)\n            return {\n                ...state,\n                bookmarks: add\n            }\n        case 'REMOVE_BOOKMARK':\n            let remove = state.bookmarks\n            remove.splice(remove.indexOf(payload), 1)\n            return {\n                ...state,\n                bookmarks: remove\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"95","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":24,"column":27,"nodeType":"98","messageId":"99","endLine":24,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":35,"column":8,"nodeType":"102","endLine":35,"endColumn":20,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"97","line":38,"column":14,"nodeType":"98","messageId":"99","endLine":38,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":68,"column":21,"nodeType":"106","endLine":68,"endColumn":92},{"ruleId":"100","severity":1,"message":"107","line":19,"column":8,"nodeType":"102","endLine":19,"endColumn":10,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":25,"column":8,"nodeType":"102","endLine":25,"endColumn":10,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":16,"column":8,"nodeType":"102","endLine":16,"endColumn":10,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"113","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":21},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'mangaList'. Either include it or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props.history' and 'props.manga.name'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'chapter' and 'mangaName'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'props.user.username'. Either include it or remove the dependency array.",["119"],"'addBookmark' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [mangaList, searchTerm]",{"range":"128","text":"129"},"Update the dependencies array to be: [props.history, props.manga.name]",{"range":"130","text":"131"},"Update the dependencies array to be: [chapter, mangaName]",{"range":"132","text":"133"},"Update the dependencies array to be: [props.user.username]",{"range":"134","text":"135"},[1090,1102],"[mangaList, searchTerm]",[454,456],"[props.history, props.manga.name]",[712,714],"[chapter, mangaName]",[445,447],"[props.user.username]"]